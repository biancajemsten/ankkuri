"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _useDeck = require("../../hooks/use-deck");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledSystem = require("styled-system");

var _typography = require("../typography");

var queryString = _interopRequireWildcard(require("query-string"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n    border: 0;\n    width: 300px;\n    padding: 1em;\n    margin-bottom: 1em;\n  "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n  height: 2em;\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  height: calc(50% - 1em);\n  width: 100%;\n  overflow: hidden;\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  align-items: flex-start;\n  text-align: start;\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 50%;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  padding: 2em 4em;\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: row;\n  background-color: black;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var PresenterDeckContainer = (0, _styledComponents.default)('div')(_templateObject());
var NotesColumn = (0, _styledComponents.default)('div')(_templateObject2());
var PreviewColumn = (0, _styledComponents.default)('div')(_templateObject3());
var PresentationHeader = (0, _styledComponents.default)(_typography.Heading)(_templateObject4());
var SlideContainer = (0, _styledComponents.default)('div')(_templateObject5());
var SlideDivider = (0, _styledComponents.default)('div')(_templateObject6());
var Button = (0, _styledComponents.default)('button')((0, _styledSystem.compose)(_styledSystem.color, _styledSystem.typography), (0, _styledComponents.css)(_templateObject7()));
Button.defaultProps = {
  backgroundColor: 'secondary',
  color: 'primary',
  fontSize: 'text'
};

var PresenterDeck = function PresenterDeck(props) {
  var _React$useContext = _react.default.useContext(_useDeck.DeckContext),
      _React$useContext$sta = _React$useContext.state,
      currentNotes = _React$useContext$sta.currentNotes,
      currentSlide = _React$useContext$sta.currentSlide,
      currentSlideElement = _React$useContext$sta.currentSlideElement,
      immediate = _React$useContext$sta.immediate;

  var isController = props.isController,
      isReceiver = props.isReceiver,
      startConnection = props.startConnection,
      terminateConnection = props.terminateConnection,
      children = props.children;

  var onStartConnection = _react.default.useCallback(function () {
    var urlParams = queryString.stringify({
      slide: currentSlide,
      slideElement: currentSlideElement,
      immediate: immediate || undefined
    });
    startConnection(urlParams);
  }, [currentSlide, currentSlideElement, immediate, startConnection]);

  var activeSlide = children.length > currentSlide ? children[currentSlide] : null;
  var nextSlide = children.length > currentSlide + 1 ? children[currentSlide + 1] : null;
  return _react.default.createElement(PresenterDeckContainer, null, _react.default.createElement(NotesColumn, null, !isController && !isReceiver && _react.default.createElement(Button, {
    onClick: onStartConnection
  }, "Start Connection"), isController && !isReceiver && _react.default.createElement(Button, {
    onClick: terminateConnection
  }, "Terminate Connection"), _react.default.createElement(PresentationHeader, {
    fontSize: "subHeader"
  }, "Notes:"), _react.default.createElement(_typography.Text, {
    lineHeight: "180%",
    fontSize: "18px"
  }, currentNotes)), _react.default.createElement(PreviewColumn, null, _react.default.createElement(SlideContainer, null, activeSlide), _react.default.createElement(SlideDivider, null), _react.default.createElement(SlideContainer, null, nextSlide)));
};

PresenterDeck.propTypes = {
  children: _propTypes.default.node.isRequired,
  isController: _propTypes.default.bool.isRequired,
  isReceiver: _propTypes.default.bool.isRequired,
  startConnection: _propTypes.default.func.isRequired,
  terminateConnection: _propTypes.default.func.isRequired
};
var _default = PresenterDeck;
exports.default = _default;