function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  height: 200px;\n\n  .spectacle-progress-indicator,\n  .spectacle-fullscreen-button {\n    display: none;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: grid;\n  grid-template-columns: repeat(3, 30vw);\n  grid-column-gap: 3vw;\n  grid-row-gap: 15px;\n  padding: 15px;\n  width: 100vw;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import * as React from 'react';
import propTypes from 'prop-types';
import styled from 'styled-components';
var SlideGrid = styled('div')(_templateObject());
var SlideGridItem = styled('div')(_templateObject2());
export default function OverviewDeck(props) {
  return React.createElement(SlideGrid, null, props.children.map(function (child, idx) {
    return React.createElement(SlideGridItem, {
      onClick: function onClick() {
        return props.goToSlide(idx);
      },
      key: "slide-".concat(idx)
    }, child);
  }));
}
OverviewDeck.propTypes = {
  children: propTypes.node,
  goToSlide: propTypes.func.isRequired
};