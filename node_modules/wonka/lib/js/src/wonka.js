'use strict';

var WonkaJs = require("./web/wonkaJs.js");
var Wonka_sinks = require("./wonka_sinks.js");
var Wonka_sources = require("./wonka_sources.js");
var Wonka_operators = require("./wonka_operators.js");

var Types = 0;

var fromArray = Wonka_sources.fromArray;

var fromList = Wonka_sources.fromList;

var fromValue = Wonka_sources.fromValue;

var make = Wonka_sources.make;

var makeSubject = Wonka_sources.makeSubject;

var empty = Wonka_sources.empty;

var never = Wonka_sources.never;

var buffer = Wonka_operators.buffer;

var combine = Wonka_operators.combine;

var concatMap = Wonka_operators.concatMap;

var concat = Wonka_operators.concat;

var concatAll = Wonka_operators.concatAll;

var filter = Wonka_operators.filter;

var map = Wonka_operators.map;

var mergeMap = Wonka_operators.mergeMap;

var merge = Wonka_operators.merge;

var mergeAll = Wonka_operators.mergeAll;

var flatten = Wonka_operators.flatten;

var onEnd = Wonka_operators.onEnd;

var onPush = Wonka_operators.onPush;

var tap = Wonka_operators.tap;

var onStart = Wonka_operators.onStart;

var sample = Wonka_operators.sample;

var scan = Wonka_operators.scan;

var share = Wonka_operators.share;

var skip = Wonka_operators.skip;

var skipUntil = Wonka_operators.skipUntil;

var skipWhile = Wonka_operators.skipWhile;

var switchMap = Wonka_operators.switchMap;

var switchAll = Wonka_operators.switchAll;

var take = Wonka_operators.take;

var takeLast = Wonka_operators.takeLast;

var takeUntil = Wonka_operators.takeUntil;

var takeWhile = Wonka_operators.takeWhile;

var publish = Wonka_sinks.publish;

var subscribe = Wonka_sinks.subscribe;

var forEach = Wonka_sinks.forEach;

var toArray = Wonka_sinks.toArray;

var debounce = WonkaJs.debounce;

var delay = WonkaJs.delay;

var throttle = WonkaJs.throttle;

var toPromise = WonkaJs.toPromise;

var interval = WonkaJs.interval;

var fromDomEvent = WonkaJs.fromDomEvent;

var fromListener = WonkaJs.fromListener;

var fromPromise = WonkaJs.fromPromise;

var fromObservable = WonkaJs.fromObservable;

var toObservable = WonkaJs.toObservable;

var fromCallbag = WonkaJs.fromCallbag;

var toCallbag = WonkaJs.toCallbag;

exports.Types = Types;
exports.fromArray = fromArray;
exports.fromList = fromList;
exports.fromValue = fromValue;
exports.make = make;
exports.makeSubject = makeSubject;
exports.empty = empty;
exports.never = never;
exports.buffer = buffer;
exports.combine = combine;
exports.concatMap = concatMap;
exports.concat = concat;
exports.concatAll = concatAll;
exports.filter = filter;
exports.map = map;
exports.mergeMap = mergeMap;
exports.merge = merge;
exports.mergeAll = mergeAll;
exports.flatten = flatten;
exports.onEnd = onEnd;
exports.onPush = onPush;
exports.tap = tap;
exports.onStart = onStart;
exports.sample = sample;
exports.scan = scan;
exports.share = share;
exports.skip = skip;
exports.skipUntil = skipUntil;
exports.skipWhile = skipWhile;
exports.switchMap = switchMap;
exports.switchAll = switchAll;
exports.take = take;
exports.takeLast = takeLast;
exports.takeUntil = takeUntil;
exports.takeWhile = takeWhile;
exports.publish = publish;
exports.subscribe = subscribe;
exports.forEach = forEach;
exports.toArray = toArray;
exports.debounce = debounce;
exports.delay = delay;
exports.throttle = throttle;
exports.toPromise = toPromise;
exports.interval = interval;
exports.fromDomEvent = fromDomEvent;
exports.fromListener = fromListener;
exports.fromPromise = fromPromise;
exports.fromObservable = fromObservable;
exports.toObservable = toObservable;
exports.fromCallbag = fromCallbag;
exports.toCallbag = toCallbag;
/* WonkaJs Not a pure module */
