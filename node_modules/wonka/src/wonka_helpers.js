

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

function talkbackPlaceholder(param) {
  return /* () */0;
}

function captureTalkback(source, sinkWithTalkback) {
  var talkback = /* record */[/* contents */talkbackPlaceholder];
  return Curry._1(source, (function (signal) {
                if (typeof signal !== "number") {
                  if (!signal.tag) {
                    talkback[0] = signal[0];
                  }
                  
                }
                return sinkWithTalkback(signal, talkback[0]);
              }));
}

function makeTrampoline(sink, f) {
  var state = /* record */[
    /* ended */false,
    /* looping */false,
    /* pull */false
  ];
  return sink(/* Start */Block.__(0, [(function (signal) {
                    var match = state[/* looping */1];
                    if (signal) {
                      state[/* ended */0] = true;
                      return /* () */0;
                    } else if (match) {
                      state[/* pull */2] = true;
                      return /* () */0;
                    } else {
                      state[/* pull */2] = true;
                      state[/* looping */1] = true;
                      while(state[/* pull */2] && !state[/* ended */0]) {
                        var match$1 = f();
                        if (match$1 !== undefined) {
                          state[/* pull */2] = false;
                          sink(/* Push */Block.__(1, [Caml_option.valFromOption(match$1)]));
                        } else {
                          state[/* ended */0] = true;
                          sink(/* End */0);
                        }
                      };
                      state[/* looping */1] = false;
                      return /* () */0;
                    }
                  })]));
}

export {
  talkbackPlaceholder ,
  captureTalkback ,
  makeTrampoline ,
  
}
/* No side effect */
